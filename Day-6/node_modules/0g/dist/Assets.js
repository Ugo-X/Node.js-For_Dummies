import { ObjectPool } from './internal/objectPool.js';
import { ResourceHandle } from './ResourceHandle.js';
export class Assets {
    constructor(_loaders) {
        this._loaders = _loaders;
        this.handlePool = new ObjectPool(() => new ResourceHandle(), (h) => h.reset());
        this.handles = new Map();
        this.load = (loader, key) => {
            let handle = this.handles.get(this.getKey(loader, key));
            if (!handle) {
                handle = this.handlePool.acquire();
                this.handles.set(this.getKey(loader, key), handle);
                this._loaders[loader](key).then((value) => handle.resolve(value));
            }
            return handle.promise;
        };
        this.immediate = (loader, key) => {
            const handle = this.handles.get(this.getKey(loader, key));
            if (!handle)
                return null;
            return handle.value;
        };
        this.getKey = (loader, key) => `${loader.toString()}:${key}`;
    }
}
//# sourceMappingURL=Assets.js.map