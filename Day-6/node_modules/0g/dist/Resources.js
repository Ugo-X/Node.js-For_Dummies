import { ObjectPool } from './internal/objectPool.js';
import { ResourceHandle } from './ResourceHandle.js';
export class Resources {
    constructor(game) {
        this.game = game;
        this.handlePool = new ObjectPool(() => new ResourceHandle(), (h) => h.reset());
        this.handles = new Map();
        this.getOrCreateGlobalHandle = (key) => {
            let handle = this.handles.get(key);
            if (!handle) {
                handle = this.handlePool.acquire();
                this.handles.set(key, handle);
            }
            return handle;
        };
        this.load = (key) => {
            return this.getOrCreateGlobalHandle(key).promise;
        };
        this.resolve = (key, value) => {
            this.getOrCreateGlobalHandle(key).resolve(value);
            this.game.logger.debug('Resolved resource', key);
        };
        this.immediate = (key) => {
            return this.getOrCreateGlobalHandle(key).value;
        };
        this.remove = (key) => {
            const value = this.handles.get(key);
            if (value) {
                this.handlePool.release(value);
                this.handles.delete(key);
            }
        };
    }
}
//# sourceMappingURL=Resources.js.map